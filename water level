import RPI.GPIO as GPIO
import time


Sigpin=8


GPIO.setmode(GPIO.BOARD)
GPIO.setup(Sigpin,GPIO.OUT)

while True :
    result=Sigpin.read()
    if result.is_vaild():
        print('Water Level is : '  ,result.waterlvel) 
    time.sleep(.2)
GPIO.cleanup()






GPIO.setmode(GPIO.BOARD)
GPIO.setup(Sigpin,GPIO.OUT)
waterlevel=GPIO.pwm(Sigpin,800)
waterlevel.start(10)


while True :
    waterlevel.ChangeFrequency(200)
    time.sleep(.2)
    waterlevel.ChangeFrequency(400)
    time.sleep(.2)
    waterlevel.ChangeFrequency(700)
    time.sleep(.2)

    
GPIO.cleanup()


import RPI.GPIO as GPIO
import time


Sigpin=8


GPIO.setmode(GPIO.BOARD)
GPIO.setup(Sigpin,GPIO.OUT)

while True :
    result=Sigpin.read()
    if result<=100:
       print('waterlevel  : low')
    elif  result>100:
        print('waterlevel  :high')
    
    time.sleep(.2)
GPIO.cleanup()


// Sensor pins
#define sensorPower 7
#define sensorPin A0

// Value for storing water level
int val = 0;

void setup() {
	// Set D7 as an OUTPUT
	pinMode(sensorPower, OUTPUT);
	
	// Set to LOW so no power flows through the sensor
	digitalWrite(sensorPower, LOW);
	
	Serial.begin(9600);
}

void loop() {
	//get the reading from the function below and print it
	int level = readSensor();
	
	Serial.print("Water level: ");
	Serial.println(level);
	
	delay(1000);
}

//This is a function used to get the reading
int readSensor() {
	digitalWrite(sensorPower, HIGH);	// Turn the sensor ON
	delay(10);							// wait 10 milliseconds
	val = analogRead(sensorPin);		// Read the analog value form sensor
	digitalWrite(sensorPower, LOW);		// Turn the sensor OFF
	return val;							// send current reading
}
